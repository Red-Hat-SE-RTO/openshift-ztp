---

- name: Include common create vmware infra tasks
  include_tasks: tasks/create_vmware_infra_common.yml

- name: Setup VMWare network dictionary
  set_fact:
    networks: "{{ networks | default([]) + [{ 'name' : cluster_configmap_info.resources[0].data.vsphere_network, 'device_type' : 'vmxnet3', 'mac' : iface_item.mac_address|default('') }] }}"
  loop: "{{ node_item.network.interfaces }}"
  loop_control:
    loop_var: iface_item

#- name: Create VM when a resource pool is not defined
#  when: node_item.vm.resource_pool is not defined
#  community.vmware.vmware_guest:
#    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
#    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
#    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
#    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
#    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
#    datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
#    cluster: "{{ cluster_configmap_info.resources[0].data.vsphere_cluster }}"
#    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
#    folder: "{{ cluster_configmap_info.resources[0].data.vsphere_vm_folder | default(cluster_configmap_info.resources[0].data.cluster_name) }}"
#    guest_id: coreos64Guest
#    state: present
#    disk: "{{ disks }}"
#    hardware:
#      memory_mb: "{{ node_item.vm.memory }}"
#      num_cpu_cores_per_socket : "{{ node_item.vm.cpu_cores * node_item.vm.cpu_threads|int }}"
#      num_cpus : "{{ (node_item.vm.cpu_sockets|int * node_item.vm.cpu_cores|int * node_item.vm.cpu_threads|int ) }}"
#    cdrom:
#    - controller_number: 0
#      unit_number: 0
#      state: present
#      type: iso
#      iso_path: "[{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}] {{ cluster_configmap_info.resources[0].data.vsphere_iso_folder | default('ISOs') }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
#    networks: "{{ networks }}"

- name: Create VM
  #when: node_item.vm.resource_pool is defined
  community.vmware.vmware_guest:
    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
    datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
    cluster: "{{ cluster_configmap_info.resources[0].data.vsphere_cluster }}"
    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
    folder: "{{ cluster_configmap_info.resources[0].data.vsphere_vm_folder | default(cluster_configmap_info.resources[0].data.cluster_name) }}"
    guest_id: coreos64Guest
    state: present
    disk: "{{ disks }}"
    resource_pool: "{{ node_item.vm.resource_pool | default(omit) }}"
    hardware:
      memory_mb: "{{ node_item.vm.memory }}"
      num_cpu_cores_per_socket : "{{ node_item.vm.cpu_cores * node_item.vm.cpu_threads|int }}"
      num_cpus : "{{ (node_item.vm.cpu_sockets|int * node_item.vm.cpu_cores|int * node_item.vm.cpu_threads|int ) }}"
    cdrom:
    - controller_number: 0
      unit_number: 0
      state: present
      type: iso
      iso_path: "[{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}] {{ cluster_configmap_info.resources[0].data.vsphere_iso_folder | default('ISOs') }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
    networks: "{{ networks }}"

- name: Set diskUUID configuration for the VM
  community.vmware.vmware_guest:
    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
    datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
    cluster: "{{ cluster_configmap_info.resources[0].data.vsphere_cluster }}"
    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
    folder: "{{ cluster_configmap_info.resources[0].data.vsphere_vm_folder | default(cluster_configmap_info.resources[0].data.cluster_name) }}"
    resource_pool: "{{ node_item.vm.resource_pool | default(omit) }}"
    advanced_settings:
      - key: disk.EnableUUID
        value: "TRUE"
    wait_for_customization: true

- name: Get the VM Information
  community.vmware.vmware_guest_info:
    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
  register: vm_guest_info

- name: debug vm_guest_info
  debug:
    msg: "{{ vm_guest_info }}"

- name: Power on the VM if it has all interfaces defined with mac addresses
  when: mac_interfaces_count|int == node_item.network.interfaces|length
  community.vmware.vmware_guest:
    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
    datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
    cluster: "{{ cluster_configmap_info.resources[0].data.vsphere_cluster }}"
    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
    folder: "{{ cluster_configmap_info.resources[0].data.vsphere_vm_folder | default(cluster_configmap_info.resources[0].data.cluster_name) }}"
    guest_id: coreos64Guest
    state: poweredon

- name: Get the VM Configuration and reconfigure NMState otherwise
  when: mac_interfaces_count|int != node_item.network.interfaces|length
  block:

    - name: debug vm_guest_info
      debug:
        msg: "{{ vm_guest_info }}"

    - name: Loop through the hw_interfaces for their Info
      debug:
        msg: "{{ vm_guest_info.instance[interface_item] }}"
      loop: "{{ vm_guest_info.instance.hw_interfaces }}"
      loop_control:
        loop_var: interface_item
        label: "{{ interface_item }}"

- name: Resetting Facts
  set_fact:
    networks: []
    disks: []
    agent_names: []
    vm_guest_info: {}