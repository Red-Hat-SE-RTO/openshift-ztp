---
- name: Delete vSphere Infrastructure for ZTP 
  hosts: all
  gather_facts: no
  vars:
    vcenter_credentials_secret:
      namespace: "{{ vcenter_credentials_secret_namespace }}"
      name: "{{ vcenter_credentials_secret_name }}"
    infraenv:
      namespace: "{{ infraenv_namespace }}"
      name: "{{ infraenv_name }}"
    cluster_configmap:
      namespace: "{{ cluster_configmap_namespace }}"
      name: "{{ cluster_configmap_name }}"

  environment:
    http_proxy: "{{ http_proxy | default('') }}"
    https_proxy: "{{ https_proxy | default('') }}"
    no_proxy: "{{ no_proxy | default('') }}"
    HTTP_PROXY: "{{ http_proxy | default('') }}"
    HTTPS_PROXY: "{{ https_proxy | default('') }}"
    NO_PROXY: "{{ no_proxy | default('') }}"
    K8S_AUTH_PROXY: "{{ http_proxy | default('') }}"
    K8S_AUTH_NO_PROXY: "{{ no_proxy | default('') }}"

  tasks:
  #- name: Preflight for Tower
  #  block:
  #  - name: Install needed pip modules
  #    pip:
  #      name:
  #        - kubernetes
  #        - openshift==0.12.1
  #      extra_args: --upgrade
  #    delegate_to: localhost
  #  when: tower_job_id is defined

  - name: Query OpenShift for needed Configs & Secrets
    block:
    - name: Get the vCenter Credentials
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ vcenter_credentials_secret.namespace }}"
        name: "{{ vcenter_credentials_secret.name }}"
      register: vsphere_secret

    - name: Fail if the vCenter credentials secret is not found
      fail:
        msg: "No vCenter credentials secret found! Looking for {{ vcenter_credentials_secret.namespace }}/{{ vcenter_credentials_secret.name }}"
      when: vsphere_secret.resources | length == 0

    - name: Get the Cluster Configuration
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ConfigMap
        namespace: "{{ cluster_configmap.namespace }}"
        name: "{{ cluster_configmap.name }}"
      register: cluster_configmap_info

    - name: Fail if the Cluster Config ConfigMap is not found
      fail:
        msg: "No Cluster Config ConfigMap found! Looking for {{ cluster_configmap.namespace }}/{{ cluster_configmap.name }}"
      when: cluster_configmap_info.resources | length == 0

    - name: Unmarshal the Cluster ConfigMap
      set_fact:
        cluster_nodes: "{{ cluster_configmap_info.resources[0].data.cluster_nodes | from_json }}"

    - name: Debug
      debug:
        msg: "{{ cluster_nodes }}"

    - name: Process VMs
      loop: "{{ cluster_nodes }}"
      loop_control:
        loop_var: node_item
      include_tasks: tasks/remove_vmware_infra.yml

    - name: Delete the iso if present
      community.vmware.vsphere_file:
        host: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
        username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
        password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
        validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl|b64decode }}"
        datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
        datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
        path: "ISOs/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
        state: absent
      ignore_errors: yes

    - name: ArgoCD Application instance
      kubernetes.core.k8s:
        state: absent
        api_version: argoproj.io/v1alpha1
        kind: Application
        namespace: argocd
        name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}"
      ignore_errors: yes

    - name: Remove Managed cluster
      kubernetes.core.k8s:
        state: absent
        api_version: cluster.open-cluster-management.io/v1
        kind: ManagedCluster
        name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}"
      ignore_errors: yes

    - name: Cluster namespace 
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Namespace
        name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}"
      ignore_errors: yes