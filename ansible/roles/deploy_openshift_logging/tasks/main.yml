---
# tasks file for deploy_openshift_logging

- name: Clear out facts
  set_fact:
    operator_csv_version: ""
    operator_csv_version_index: ""
    operator_api_definition: ""
    operator_api_version: ""
    operator_default_channel: ""

- name: Get Cluster Version
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: r_ocp_version

- name: Set cluster version
  set_fact:
    ocp_version: "{{ r_ocp_version.resources[0].status.desired.version  }}"

###########################################################################
## Elasticsearch Operator Setup
###########################################################################

- name: Query the elasticsearch-operator PackageManifest for the latest version of the Red Hat Elasticsearch Operator
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: elasticsearch-operator
    namespace: openshift-marketplace
  register: r_es_pm

- name: Set the latest ES CSV version
  set_fact:
    es_operator_csv_version: "{{ chan_item.currentCSV }}"
    es_operator_csv_version_index: "{{ chan_idx }}"
    es_operator_default_channel: "{{ r_es_pm.resources[0].status.defaultChannel }}"
  loop: "{{ r_es_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"
  when: chan_item.name ==  r_es_pm.resources[0].status.defaultChannel

- name: Fail if the Current Operator CSV was not found
  fail:
    msg: "Operator CSV for RH Elasticsearch not found for channel {{ r_es_pm.resources[0].status.defaultChannel }}"
  when: es_operator_csv_version is undefined

- name: Set additional operator specific facts
  set_fact:
    es_operator_api_definition: "{{ r_es_pm.resources[0].status.channels[es_operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='Elasticsearch')].name\") | first }}"
    es_operator_api_version: "{{ r_es_pm.resources[0].status.channels[es_operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='Elasticsearch')].version\") | first }}"

###########################################################################
## OpenShift Logging Operator Setup
###########################################################################

- name: Query the cluster-logging PackageManifest for the latest version of the Red Hat Logging Operator
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: cluster-logging
    namespace: openshift-marketplace
  register: r_pm

- name: Set the latest Logging CSV version
  set_fact:
    logging_operator_csv_version: "{{ chan_item.currentCSV }}"
    logging_operator_csv_version_index: "{{ chan_idx }}"
    logging_operator_default_channel: "{{ r_pm.resources[0].status.defaultChannel }}"
  loop: "{{ r_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"
  when: chan_item.name ==  r_pm.resources[0].status.defaultChannel

- name: Fail if the Current Operator CSV was not found
  fail:
    msg: "Operator CSV for RH Logging Operator not found for channel {{ r_pm.resources[0].status.defaultChannel }}"
  when: logging_operator_csv_version is undefined

- name: Set additional operator specific facts
  set_fact:
    logging_operator_api_definition: "{{ r_pm.resources[0].status.channels[logging_operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='ClusterLogging')].name\") | first }}"
    logging_operator_api_version: "{{ r_pm.resources[0].status.channels[logging_operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='ClusterLogging')].version\") | first }}"

###########################################################################
## Setup
###########################################################################

- name: Debug
  debug:
    msg:
      - "OpenShift Version: {{ ocp_version }}"
      - "ElasticSearch Operator CSV version: {{ es_operator_csv_version }}"
      - "ElasticSearch Operator API Definition: {{ es_operator_api_definition }}"
      - "ElasticSearch Operator API Version: {{ es_operator_api_version }}"
      - "Logging Operator CSV version: {{ logging_operator_csv_version }}"
      - "Logging Operator API Definition: {{ logging_operator_api_definition }}"
      - "Logging Operator API Version: {{ logging_operator_api_version }}"

- name: Create namespace for {{ logging_operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ logging_operator_namespace }}"
        label:
          openshift.io/cluster-monitoring: 'true'
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Create namespace for {{ elasticsearch_operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ elasticsearch_operator_namespace }}"
        label:
          openshift.io/cluster-monitoring: 'true'
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

###########################################################################
## OperatorGroup
###########################################################################

- name: Query the {{ elasticsearch_operator_namespace }} namespace for OperatorGroups
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ elasticsearch_operator_namespace }}"
  register: r_og_list

- name: Create Operator OperatorGroup
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/es_operatorgroup.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  when: r_og_list.resources | length == 0

- name: Query the {{ logging_operator_namespace }} namespace for OperatorGroups
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ logging_operator_namespace }}"
  register: r_og_list

- name: Create Operator OperatorGroup
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/logging_operatorgroup.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  when: r_og_list.resources | length == 0

###########################################################################
## Elasticsearch Subscription
###########################################################################

- name: Create Elasticsearch Operator subscription
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/es_subscription.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Wait for the Operator to become available - before v4.9.0
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: "{{ es_operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='lt', strict=True)

- name: Wait for the Operator to come online - v4.9.0+
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ es_operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='ge', strict=True)

###########################################################################
## Logging Subscription
###########################################################################

- name: Create OpenShift Logging Operator subscription
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/logging_subscription.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Wait for the Operator to become available - before v4.9.0
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: "{{ logging_operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='lt', strict=True)

- name: Wait for the Operator to come online - v4.9.0+
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ logging_operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='ge', strict=True)

###########################################################################
## Logging Instance
###########################################################################

- name: Create ClusterLogging
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/clusterlogging.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Get the elasticsearch Pod
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ logging_operator_namespace }}"
    label_selectors:
      - component = elasticsearch
  register: r_es_pod
  retries: 200
  delay: 10
  until: r_es_pod.resources | list | length == 1

- name: Wait till the Elasticsearch Pod is ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ logging_operator_namespace }}"
    name: "{{ r_es_pod.resources[0].metadata.name }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 720
    wait_condition:
      type: Ready
      status: "True"
