apiVersion: automationcontroller.ansible.com/v1beta1
kind: AutomationController
metadata:
  labels:
    app.kubernetes.io/component: automationcontroller
    app.kubernetes.io/managed-by: automationcontroller-operator
    app.kubernetes.io/name: {{ aap_controller_name }}
    app.kubernetes.io/operator-version: ''
    app.kubernetes.io/part-of: {{ aap_controller_name }}
  name: {{ aap_controller_name }}
  namespace: {{ aap_operator_namespace }}
spec:
  set_self_labels: true
  ipv6_disabled: false
  auto_upgrade: true
  security_context_settings:
    runAsUser: 996
    runAsGroup: 0
    #fsGroup: 0
  ee_resource_requirements:
    limits:
      cpu: 1000m
    requests:
      cpu: 250m
  create_preload_data: true
  route_tls_termination_mechanism: Edge
  garbage_collect_secrets: false
  loadbalancer_port: 80
  projects_use_existing_claim: _No_
  task_resource_requirements:
    limits:
      cpu: 1000m
    requests:
      cpu: 250m
  image_pull_policy: IfNotPresent
  projects_storage_size: 8Gi
  admin_email: {{ aap_controller_admin_email }}
  task_privileged: true
  projects_persistence: false
  projects_storage_class: {{ aap_controller_storageclass_name }}
  projects_storage_access_mode: {{ aap_controller_storageclass_mode }}
  web_resource_requirements:
    limits:
      cpu: 1000m
    requests:
      cpu: 250m
  replicas: 1
  admin_user: {{ aap_controller_admin_username }}
  loadbalancer_protocol: http
  nodeport_port: 30080
  #postgres_data_path: /var/tmp
  #postgres_storage_class: {{ aap_controller_storageclass_name }}
  postgres_configuration_secret: ac-tower-postgres-configuration
{% if (r_cluster_root_ca_aap2.resources[0].spec.trustedCA.name is defined) and (r_cluster_root_ca_aap2.resources[0].spec.trustedCA.name != '') %}
  bundle_cacert_secret: cluster-root-ca-aap2-bundle
{% endif %}