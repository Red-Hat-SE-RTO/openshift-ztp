---
# tasks file for deploy_http_mirror

- name: Create namespace for {{ http_mirror_operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ http_mirror_operator_namespace }}"
        labels:
          openshift.io/cluster-monitoring: 'true'
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

# ===============================================================================================
# Add the custom Root CAs
# ===============================================================================================

- name: Check to see if the cluster-wide certificates are set
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Proxy
    name: cluster
  register: r_cluster_root_ca_mirror

- name: Add the needed empty ConfigMap to populate with cluster-wide Root CAs
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: ConfigMap
    namespace: "{{ http_mirror_operator_namespace }}"
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: trusted-ca
        labels:
          config.openshift.io/inject-trusted-cabundle: 'true'
      data: {}
  when: (r_cluster_root_ca_mirror.resources[0].spec.trustedCA.name is defined) and (r_cluster_root_ca_mirror.resources[0].spec.trustedCA.name != '')

# ===============================================================================================
# Setup Proxy Facts
# ===============================================================================================

- name: Set the fact for httpProxy
  when: (r_cluster_root_ca_mirror.resources[0].status.httpProxy is defined) and (r_cluster_root_ca_mirror.resources[0].status.httpProxy != '')
  set_fact:
    cluster_wide_http_proxy: "{{ r_cluster_root_ca_mirror.resources[0].status.httpProxy }}"

- name: Set the fact for httpsProxy
  when: (r_cluster_root_ca_mirror.resources[0].status.httpsProxy is defined) and (r_cluster_root_ca_mirror.resources[0].status.httpsProxy != '')
  set_fact:
    cluster_wide_https_proxy: "{{ r_cluster_root_ca_mirror.resources[0].status.httpsProxy }}"

- name: Set the fact for noProxy
  when: (r_cluster_root_ca_mirror.resources[0].status.noProxy is defined) and (r_cluster_root_ca_mirror.resources[0].status.noProxy != '')
  set_fact:
    cluster_wide_no_proxy: "{{ r_cluster_root_ca_mirror.resources[0].status.noProxy }}"

# ===============================================================================================
# Deploy the ZTP HTTP Mirror
# ===============================================================================================

- name: Deploy the ZTP HTTP Mirror
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', template_item) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  loop:
    - "templates/01-configmap.yaml.j2"
    - "templates/02-pvc.yaml.j2"
    - "templates/03-deployment.yaml.j2"
    - "templates/04-service.yaml.j2"
    - "templates/05-route.yaml.j2"
  loop_control:
    loop_var: template_item
