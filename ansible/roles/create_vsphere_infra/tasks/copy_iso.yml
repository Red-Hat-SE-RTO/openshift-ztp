---
# noqa exemptions:
#   ignore-errors: Because I am dumb and haven't tested
#    better error checks from the vSphere modules
#######################################################

- name: Query the RHACM OAS InfraEnv for the Discovery ISO
  kubernetes.core.k8s_info:
    api_version: agent-install.openshift.io/v1beta1
    kind: InfraEnv
    namespace: "{{ infraenv.namespace }}"
    name: "{{ infraenv.name }}"
  register: infraenv_info
  retries: 6
  delay: 10
  until: infraenv_info.resources[0].status.isoDownloadURL != ""
  #ignore_errors: true

- name: Filesystem Configuration
  block:
    - name: Create a temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: iso
      register: iso_temp_dir

    - name: Download Discovery ISO
      ansible.builtin.get_url:
        url: "{{ infraenv_info.resources[0].status.isoDownloadURL }}"
        dest: "{{ iso_temp_dir.path }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
        validate_certs: false
        mode: "0644"

    - name: Delete the previous iso if present # noqa: ignore-errors
      community.vmware.vsphere_file:
        host: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
        username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
        password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
        validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl | b64decode }}"
        datacenter: "{{ cluster_configmap_info.resources[0].data.vcenter_dc_path | default('') }}{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
        datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
        path: "{{ cluster_configmap_info.resources[0].data.vsphere_iso_folder | default('ISOs') }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
        state: absent
      ignore_errors: true

    - name: Upload Discovery ISO to the target Cluster Host
      community.vmware.vsphere_copy:
        hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
        username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
        password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
        validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl | b64decode }}"
        src: "{{ iso_temp_dir.path }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
        datacenter: "{{ cluster_configmap_info.resources[0].data.vcenter_dc_path | default('') }}{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
        datastore: "{{ cluster_configmap_info.resources[0].data.vsphere_datastore }}"
        path: "{{ cluster_configmap_info.resources[0].data.vsphere_iso_folder | default('ISOs') }}/discovery-iso-{{ cluster_configmap_info.resources[0].data.cluster_name }}.iso"
        timeout: "600"
      retries: 5
      delay: 10
      until: upload_iso.changed | bool
      ignore_errors: true
      register: upload_iso

  always:
    - name: Delete the temporary directory used to store the ISO
      ansible.builtin.file:
        path: "{{ iso_temp_dir.path }}"
        state: absent
        force: true
