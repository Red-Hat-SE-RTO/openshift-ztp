---

- name: Get the VM Information
  community.vmware.vmware_guest_info:
    hostname: '{{ vsphere_secret.resources[0].data.vcenter_fqdn | b64decode }}'
    username: '{{ vsphere_secret.resources[0].data.vcenter_username | b64decode }}'
    password: '{{ vsphere_secret.resources[0].data.vcenter_password | b64decode }}'
    validate_certs: "{{ vsphere_secret.resources[0].data.vcenter_validate_ssl | b64decode }}"
    name: "{{ cluster_configmap_info.resources[0].data.cluster_name }}-{{ node_item.name }}"
    datacenter: "{{ cluster_configmap_info.resources[0].data.vsphere_datacenter }}"
    folder: "{{ cluster_configmap_info.resources[0].data.vsphere_vm_folder | default(cluster_configmap_info.resources[0].data.cluster_name) }}"
  register: vm_guest_info

- name: Debug vm_guest_info
  ansible.builtin.debug:
    msg: "{{ vm_guest_info }}"
  
- name: Get the HW NICs
  ansible.builtin.set_fact:
    hw_nics: "{{ vm_guest_info.instance.hw_interfaces }}"

- name: Compile the map for the NICs and Mac Addresses
  ansible.builtin.set_fact:
    hw_nics_mac_map: "{{ hw_nics_mac_map | default([]) +  [{'name': nic_item, 'macAddress': vm_guest_info.instance['hw_'+nic_item].macaddress}] }}"
  loop: "{{ hw_nics }}"
  loop_control:
    loop_var: nic_item

- name: Debug hw_nics_mac_map
  ansible.builtin.debug:
    msg: "{{ hw_nics_mac_map }}"

- name: Add the hw_nics_mac_map to the node_nic_map
  ansible.builtin.set_fact:
    node_nic_map: "{{ node_nic_map | default({}) | combine({node_item.name: hw_nics_mac_map}) }}"

- name: Debug node_nic_map
  ansible.builtin.debug:
    msg: "{{ node_nic_map }}"

- name: Resetting Facts
  ansible.builtin.set_fact:
    hw_nics_mac_map: ""