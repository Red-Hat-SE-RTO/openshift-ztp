---
# tasks file for deploy_rhacm_operator

- name: Clear out facts
  set_fact:
    operator_csv_version: ""
    operator_csv_version_index: ""
    operator_api_definition: ""
    operator_api_version: ""

- name: Get Cluster Version
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: r_ocp_version

- name: Set cluster version
  set_fact:
    ocp_version: "{{ r_ocp_version.resources[0].status.desired.version }}"

- name: Query the advanced-cluster-management PackageManifest for the latest version of the Red Hat Advanced Cluster Management Operator
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: advanced-cluster-management
    namespace: openshift-marketplace
  register: r_pm

- name: Set the latest release channels
  set_fact:
    operator_release_channels: "{{ operator_release_channels|default([]) + [chan_item.name] }}"
  loop: "{{ r_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"

- name: Set the latest CSV version
  set_fact:
    operator_channel: "{{ operator_release_channels | sort | last }}"
    operator_csv_version: "{{ chan_item.currentCSV }}"
    operator_csv_version_index: "{{ chan_idx }}"
  loop: "{{ r_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"
  when: chan_item.name == operator_release_channels|sort|last

- name: Set additional operator specific facts
  set_fact:
    operator_api_definition: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='MultiClusterHub')].name\") | first }}"
    operator_api_version: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='MultiClusterHub')].version\") | first }}"

- name: Debug
  debug:
    msg:
      - "OpenShift Version: {{ ocp_version }}"
      - "Operator Release version: {{ operator_release_channels | sort | last }}"
      - "Operator CSV version: {{ operator_csv_version }}"
      - "Operator API Definition: {{ operator_api_definition }}"
      - "Operator API Version: {{ operator_api_version }}"

- name: Create namespace for {{ acm_operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ acm_operator_namespace }}"
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Create namespace for open-cluster-management-observability
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: open-cluster-management-observability
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Query the OCP pull-secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: openshift-config
    name: pull-secret
  register: r_pull_secret

- name: Create a Secret in the open-cluster-management-observability namespace
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Secret
    namespace: open-cluster-management-observability
    name: multiclusterhub-operator-pull-secret
    definition:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ r_pull_secret.resources[0].data['.dockerconfigjson'] }}"

- name: Create Nooba Bucket
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/10_objectbucketclaim.yml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Query the {{ acm_operator_namespace }} namespace for OperatorGroups
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ acm_operator_namespace }}"
  register: r_og_list

- name: Create Operator OperatorGroup
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/operatorgroup.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30
  when: r_og_list.resources | length == 0

- name: Create Operator subscription
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/subscription.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Wait for the Operator to become available - before v4.9.0
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='lt', strict=True)

- name: Wait for the Operator to come online - v4.9.0+
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='ge', strict=True)

- name: Create MultiClusterHub
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/multiclusterhub.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Get Nooba bucket Secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: open-cluster-management-observability
    name: thanos-object-storage-bucket
  register: r_nooba_secret
  until: r_nooba_secret.resources | length > 0
  delay: 10
  retries: 30

- name: Create new secret for the thanos s3 binding
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Secret
    definition:
      metadata:
        namespace: open-cluster-management-observability
        name: thanos-object-storage
      type: Opaque
      stringData:
        thanos.yaml: |
          type: s3
          config:
            bucket: thanos-object-storage-bucket
            endpoint: s3.openshift-storage.svc
            insecure: true
            access_key: {{ r_nooba_secret.resources[0].data.AWS_ACCESS_KEY_ID | b64decode }}
            secret_key: {{ r_nooba_secret.resources[0].data.AWS_SECRET_ACCESS_KEY | b64decode }}

- name: Create MultiClusterObservability
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/10_multi_observability_cr.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30
