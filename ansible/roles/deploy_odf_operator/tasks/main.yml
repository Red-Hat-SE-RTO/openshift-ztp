---
# tasks file for deploy_odf_operator

- name: Clear out facts
  set_fact:
    operator_csv_version: ""
    operator_csv_version_index: ""
    operator_api_definition: ""
    operator_api_version: ""

- name: Get the cluster infrastructure information
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Infrastructure
    name: cluster
  register: r_ocp_infra

- name: Get Cluster Version
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: r_ocp_version

- name: Query the odf-operator PackageManifest for the latest version of the OpenShift Data Foundation Operator
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: odf-operator
    namespace: openshift-marketplace
  register: r_pm

- name: Set cluster version
  set_fact:
    ocp_version: "{{ r_ocp_version.resources[0].status.desired.version | split('-') | first }}"

- name: Set cluster version slice
  set_fact:
    ocp_version_slice: "{{ ocp_version.split('.') }}"

- name: Set Operator channel version
  set_fact:
    #operator_channel: "stable-{{ ocp_version_slice[0] }}.{{ ocp_version_slice[1] }}"
    operator_channel: "{{ r_pm.resources[0].status.defaultChannel }}"

- name: Set the latest CSV version
  set_fact:
    operator_csv_version: "{{ chan_item.currentCSV }}"
    operator_csv_version_index: "{{ chan_idx }}"
  loop: "{{ r_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"
  when: chan_item.name == operator_channel

- name: Fail if the Current Operator CSV was not found
  fail:
    msg: "Operator CSV for ODF not found for channel {{ operator_channel }}"
  when: operator_csv_version is undefined

- name: Set additional operator specific facts
  set_fact:
    operator_api_definition: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='StorageSystem')].name\") | first }}"
    operator_api_version: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='StorageSystem')].version\") | first }}"

- name: Debug
  debug:
    msg:
      - "OpenShift Version: {{ ocp_version }}"
      - "Operator CSV version: {{ operator_csv_version }}"
      - "Operator API Definition: {{ operator_api_definition }}"
      - "Operator API Version: {{ operator_api_version }}"

- name: Create namespace for {{ odf_operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ odf_operator_namespace }}"
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Query the {{ odf_operator_namespace }} namespace for OperatorGroups
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ odf_operator_namespace }}"
  register: r_og_list

- name: Create Operator OperatorGroup
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/operatorgroup.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  when: r_og_list.resources | length == 0

- name: Create Operator subscription
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/subscription.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Wait for the Operator to become available - before v4.9.0
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='lt', strict=True)

- name: Wait for the Operator to come online - v4.9.0+
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='ge', strict=True)

- name: Wait for the Console Plugin to become available
  kubernetes.core.k8s_info:
    api_version: console.openshift.io/v1alpha1
    kind: ConsolePlugin
    name: odf-console
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1

- name: Enable ODF Console Plugin
  kubernetes.core.k8s:
    state: patched
    merge_type:
    - strategic-merge
    - merge
    kind: Console
    api_version: operator.openshift.io/v1
    name: cluster
    definition:
      spec:
        plugins:
          - odf-console
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Create the ODF StorageCluster for AWS
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/aws_storagecluster.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  when: r_ocp_infra.resources[0].status.platform == "AWS"

- name: Create the ODF StorageCluster for LSO
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/lso_storagecluster.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
  when: r_ocp_infra.resources[0].status.platform != "AWS"

- name: Create the ODF StorageSystem
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/storagesystem.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3

- name: Run tasks for assigning workloads to the Infra nodes
  when: deploy_to_infra_nodes|bool
  block:

    - name: Wait for the rook-ceph-operator-config ConfigMap to exist in the openshift-storage namespace
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ConfigMap
        name: rook-ceph-operator-config
        namespace: openshift-storage
      register: r_cm_list
      retries: 200
      delay: 15
      until: r_cm_list.resources | list | length == 1
    
    - name: Reconfigure the rook-ceph-operator-config ConfigMap
      kubernetes.core.k8s:
        state: present
        merge_type:
        - strategic-merge
        - merge
        definition: "{{ lookup('template', 'templates/rook-ceph-operator-config-cm.yaml.j2' ) | from_yaml }}"
      register: k8s_run
      until: k8s_run is not failed
      delay: 10
      retries: 3

- name: Wait for the CephFS StorageClasses to come online
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ odf_storagecluster_name }}-ceph-rbd"
  register: sc_crd
  retries: 200
  delay: 10
  until: sc_crd.resources | list | length == 1

- name: Label the CephFS RBD StorageClass as default
  kubernetes.core.k8s:
    name: "{{ odf_storagecluster_name }}-ceph-rbd"
    kind: StorageClass
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      kind: StorageClass
      apiVersion: v1
      name: "{{ odf_storagecluster_name }}-ceph-rbd"
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 3
