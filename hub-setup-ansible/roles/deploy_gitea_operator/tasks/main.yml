---
# tasks file for deploy_gitea_operator

- name: Add the Gitea Operator CatalogSource
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/rh-gpte-gitea-catalogsource.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Wait for the CatalogSource to sync
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: CatalogSource
    name: redhat-gpte-gitea
    namespace: openshift-marketplace
  register: cs_check
  retries: 200
  delay: 10
  until: cs_check.resources[0].status.connectionState.lastObservedState == "READY"

- name: Get Cluster Version
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: r_ocp_version

- name: Set cluster version
  set_fact:
    ocp_version: "{{ r_ocp_version.resources[0].status.desired.version  }}"

- name: Query the gitea-operator PackageManifest for the latest version of the Gitea Operator
  kubernetes.core.k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: gitea-operator
    namespace: openshift-marketplace
  register: r_pm

- name: Set the latest CSV version
  set_fact:
    operator_csv_version: "{{ chan_item.currentCSV }}"
    operator_csv_version_index: "{{ chan_idx }}"
  loop: "{{ r_pm.resources[0].status.channels }}"
  loop_control:
    loop_var: chan_item
    index_var: chan_idx
    label: "{{ chan_item.name }}"
  when: chan_item.name ==  operator_channel

- name: Fail if the Current Operator CSV was not found
  fail:
    msg: "Operator CSV for Gitea not found for channel {{ operator_channel }}"
  when: operator_csv_version is undefined

- name: Set additional operator specific facts
  set_fact:
    operator_api_definition: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='Gitea')].name\") | first }}"
    operator_api_version: "{{ r_pm.resources[0].status.channels[operator_csv_version_index].currentCSVDesc.customresourcedefinitions.owned | json_query(\"[?(@.kind=='Gitea')].version\") | first }}"

- name: Debug
  debug:
    msg:
      - "OpenShift Version: {{ ocp_version }}"
      - "Operator CSV version: {{ operator_csv_version }}"
      - "Operator API Definition: {{ operator_api_definition }}"
      - "Operator API Version: {{ operator_api_version }}"

- name: Create namespace for {{ operator_namespace }}
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    merge_type:
    - strategic-merge
    - merge
    definition:
      metadata:
        name: "{{ operator_namespace }}"
      spec: {}
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Query the {{ operator_namespace }} namespace for OperatorGroups
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ operator_namespace }}"
  register: r_og_list

- name: Create Operator OperatorGroup
  kubernetes.core.k8s:
    state: present
    apply: yes
    definition: "{{ lookup('template', 'templates/operatorgroup.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30
  when: r_og_list.resources | length == 0

- name: Create Operator subscription
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/subscription.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30

- name: Wait for the Operator to become available - before v4.9.0
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='lt', strict=True)

- name: Wait for the Operator to come online - v4.9.0+
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ operator_api_definition }}"
  register: crd_check
  retries: 200
  delay: 10
  until: crd_check.resources | list | length == 1
  when: ocp_version is version('4.9.0', operator='ge', strict=True)

- name: Deploy Gitea Instance
  kubernetes.core.k8s:
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', 'templates/instance.yaml.j2' ) | from_yaml }}"
  register: k8s_run
  until: k8s_run is not failed
  delay: 10
  retries: 30