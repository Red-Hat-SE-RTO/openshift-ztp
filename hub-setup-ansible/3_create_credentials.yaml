- name: Create Credentials for ZTP
  connection: local
  hosts: localhost
  gather_facts: no

  vars:
    credentials_namespace: ztp-credentials
    aap2_operator_namespace: ansible-automation-platform
    aap2_controller_name: ac-tower

    ## Path to the OpenShift Pull Secret
    pull_secret_path: ~/rh-ocp-pull-secret.json

    ## vCenter Credentials
    vcenter_secret_name: loe-rdu-vcenter-credentials
    vcenter_fqdn: vcenter.example.com
    vcenter_username: some-user
    vcenter_password: some-password

  tasks:
  - name: Create namespace for {{ credentials_namespace }}
    kubernetes.core.k8s:
      state: present
      kind: Namespace
      api_version: v1
      merge_type:
      - strategic-merge
      - merge
      definition:
        metadata:
          name: "{{ credentials_namespace }}"
        spec: {}
    register: k8s_run
    until: k8s_run is not failed
    delay: 10
    retries: 30

  - name: Get the AAP2 Controller Route
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Route
      namespace: "{{ aap2_operator_namespace }}"
      name: "{{ aap2_controller_name }}"
    register: aap2_controller_route

  - name: Get the AAP2 Controller User OAuth Token
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      namespace: "{{ aap2_operator_namespace }}"
      name: aap2-controller-admin-application-token
    register: aap2_controller_user_oauth_token

  - name: Read in the Pull Secret
    set_fact:
      pull_secret: "{{ lookup('file', pull_secret_path) }}"

  - name: Create Ansible Controller/Tower OAuth Secret
    kubernetes.core.k8s:
      state: present
      apply: yes
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: ansible-tower-credentials
          namespace: "{{ credentials_namespace }}"
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: '.*'
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: 'true'
        type: Opaque
        stringData:
          host: "https://{{ aap2_controller_route.resources[0].status.ingress[0].host }}"
          token: "{{ aap2_controller_user_oauth_token.resources[0].data.token }}"
    register: k8s_run
    until: k8s_run is not failed
    delay: 10
    retries: 30

  - name: Create Assisted Service Pull Secret
    kubernetes.core.k8s:
      state: present
      apply: yes
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: assisted-deployment-pull-secret
          namespace: "{{ credentials_namespace }}"
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: '.*'
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: 'true'
        type: Opaque
        stringData:
          .dockerconfigjson: '{{ pull_secret | to_json }}'
    register: k8s_run
    until: k8s_run is not failed
    delay: 10
    retries: 30

  - name: Create vCenter Secret
    kubernetes.core.k8s:
      state: present
      apply: yes
      definition:
        apiVersion: v1
        kind: Secret
        metadata:
          name: "{{ vcenter_secret_name }}"
          namespace: "{{ credentials_namespace }}"
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: '.*'
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: 'true'
        type: Opaque
        stringData:
          vcenter_fqdn: "{{ vcenter_fqdn }}"
          vcenter_username: "{{ vcenter_username }}"
          vcenter_password: "{{ vcenter_password }}"
          skip_ssl_validation: "true"
    register: k8s_run
    until: k8s_run is not failed
    delay: 10
    retries: 30
